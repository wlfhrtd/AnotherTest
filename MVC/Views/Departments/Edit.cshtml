@using MVC.Components.TagHelpers
@model MVC.ViewModels.DepartmentViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Department</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Department.Name" class="control-label"></label>
                <input asp-for="Department.Name" class="form-control" />
                <span asp-validation-for="Department.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
            <h4>Related Departments</h4>
            <div class="form-group">               
                @Html.CreateUnorderedList("sortable1", "connectedSortable", Model.ConnectedSubdepartmentsNames.ToList(),
                                          "ui-state-default", "ConnectedSubdepartmentsNames", "ConnectedDepartment")
            </div>
            <h4>Unrelated Departments</h4>
            <div class="form-group">
                @Html.CreateUnorderedList("sortable2", "connectedSortable", Model.DisconnectedSubdepartmentsNames.ToList(),
                                          "ui-state-highlight", "DisconnectedSubdepartmentsNames", "DisconnectedDepartment")
            </div>
            <input type="hidden" asp-for="Department.Name" />          
        </form>
    </div>
</div>


<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script type="text/javascript" src="~/js/jqueryUISortableForEdit.js"></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
